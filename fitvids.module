<?php
/**
 * @file
 * Includes the FitVids.js jQuery plugin for fluid width video embeds.
 */

// Constants
define("FITVIDS_DEFAULT_REGIONS", 'body');
define("FITVIDS_PLUGIN_URL", 'https://raw.github.com/davatron5000/FitVids.js/master/jquery.fitvids.js');
define("FITVIDS_PLUGIN_FILENAME", 'jquery.fitvids.js');

/**
 * Implements hook_permission().
 */
function fitvids_permission() {
  return array(
    'administer fitvids' => array(
      'title' => t('Administer the FitVids module'),
    )
  );
}

/**
 * Implements hook_menu().
 */
function fitvids_menu() {
  $items = array();

  $items['admin/config/media/fitvids'] = array(
    'title' => 'FitVids',
    'description' => 'Configuration for FitVids module',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('fitvids_admin_settings'),
    'access arguments' => array('administer fitvids'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Configuraton form, called by backdrop_get_form()
 * in current_posts_menu().
 */
function fitvids_admin_settings($form, &$form_state) {

  $config = config('fitvids.settings');

  $form['fitvids_intro'] = array(
    '#markup' => '<p>FitVids is a jQuery plugin for fluid width video embeds. By default, it supports YouTube, Vimeo and Kickstarter.</p>',
  );

  $form['selectors'] = array(
    '#type' => 'textarea',
    '#title' => t('Video containers'),
    '#default_value' => $config->get('selectors'),
    '#rows' => 3,
    '#description' => t('Enter some jQuery selectors for your video containers. Use a new line for each selector.'),
    '#required' => TRUE,
  );

  $form['customselectors'] = array(
    '#type' => 'textarea',
    '#title' => t('Custom iframe URLs'),
    '#default_value' => $config->get('customselectors'),
    '#rows' => 3,
    '#description' => t('Only YouTube, Vimeo and Kickstarter are supported by default, but you can tell FitVids about videos from other sites by adding the domain of the player. <br />E.g., "http://www.dailymotion.com". Use a new line for each URL. You don\'t need to add trailing slashes.'),
  );

  $form['simplifymarkup'] = array(
    '#type' => 'checkbox',
    '#title' => t('Simplify media_youtube and media_vimeo markup'),
    '#default_value' => $config->get('simplifymarkup'),
    '#description' => t('Older versions of the media_youtube and media_vimeo modules wrap videos in HTML which may stop FitVids working properly. Enable this to remove the unneccesary markup.'),
  );

  $form['actions']['#type'] = 'actions';
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Configuration'),
  );

  return $form;

}

function fitvids_admin_settings_validate ($form, &$form_state) {

}

function fitvids_admin_settings_submit ($form, &$form_state) {
  //debug($form_state['values']);
  $config = config('fitvids.settings');
  $values = $form_state['values'];
  $config->set('selectors', $values['selectors']);
  $config->set('customselectors', $values['customselectors']);
  $config->set('simplifymarkup', $values['simplifymarkup']);
  $config->save();

  backdrop_set_message(t('Your FitVids settings have been saved.'));
}


/**
 * Implements hook_page_build().
 *
 * Include the FitVids.js script on every page
 */
function fitvids_preprocess_page(&$variables) {

  //Performance: Skip this entirely for AJAX requests
  if (!backdrop_is_html()) {
    return;
  }
  $config = config('fitvids.settings');

  // Generate the custom vendor selectors
  $fitvids_customselectors = $config->get('customselectors');
  $fitvids_customselectors_array = array();
  if ($fitvids_customselectors != '') {
    $fitvids_customselectors_array = explode(PHP_EOL, $fitvids_customselectors);
    $custom_selectors = '';
    if (count($fitvids_customselectors_array) > 0) {
      foreach ($fitvids_customselectors_array as $key => $value) {
        $fitvids_customselectors_array[$key] = 'iframe[src^=\'' . trim($value) . '\']';
      }
      $custom_selectors = '{ customSelector: "' . implode(',', $fitvids_customselectors_array) . '" }';
    }
  }
  else {
    $custom_selectors = '';
  }

  // Get fitvids containers
  $fitvids_selectors = $config->get('selectors');
  $fitvids_selectors_array = explode(PHP_EOL, $fitvids_selectors);

  // Simplify markup?
  $simplifymarkup = $config->get('simplifymarkup');

  // Export the variables to Backdrop.settings
  backdrop_add_js(array('fitvids' => array(
    'custom_domains' => $fitvids_customselectors_array,
    'selectors' => $fitvids_selectors_array,
    'simplifymarkup' => $simplifymarkup,
  )), 'setting');
}

/**
* Implements hook_config_info().
*/
function fitvids_config_info() {
$prefixes['fitvids.settings'] = array(
    'label' => t('FitVids'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}
